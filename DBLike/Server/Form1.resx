<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>